{"ast":null,"code":"var _jsxFileName = \"/Users/martabelmonteandres/Desktop/ejercicios adalab vsc/React/Adalab-promo-T-module-3-pair-10-sprint-2-hangman-game/src/components/SolutionLetters.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SolutionLetters = _ref => {\n  let {\n    word,\n    userLetters\n  } = _ref;\n  const renderSolutionLetters = () => {\n    return word.split('').map(letter => {\n      if (userLetters.includes(letter)) {\n        return letter;\n      } else {\n        return '_';\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solution\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Soluci\\xF3n:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"letters\",\n      children: renderSolutionLetters().map((letter, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"letter\",\n        children: letter\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = SolutionLetters;\nexport default SolutionLetters;\nvar _c;\n$RefreshReg$(_c, \"SolutionLetters\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SolutionLetters","_ref","word","userLetters","renderSolutionLetters","split","map","letter","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/Users/martabelmonteandres/Desktop/ejercicios adalab vsc/React/Adalab-promo-T-module-3-pair-10-sprint-2-hangman-game/src/components/SolutionLetters.js"],"sourcesContent":["import React from 'react';\n\nexport const SolutionLetters = ({ word, userLetters }) => {\n  const renderSolutionLetters = () => {\n    return word.split('').map((letter) => {\n      if (userLetters.includes(letter)) {\n        return letter;\n      } else {\n        return '_';\n      }\n    });\n  };\n\n  return (\n    <div className=\"solution\">\n      <h2 className=\"title\">Soluci√≥n:</h2>\n      <ul className=\"letters\">\n        {renderSolutionLetters().map((letter, index) => (\n          <li key={index} className=\"letter\">\n            {letter}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SolutionLetters;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAA2B;EAAA,IAA1B;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACnD,MAAMG,qBAAqB,GAAGA,CAAA,KAAM;IAClC,OAAOF,IAAI,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEC,MAAM,IAAK;MACpC,IAAIJ,WAAW,CAACK,QAAQ,CAACD,MAAM,CAAC,EAAE;QAChC,OAAOA,MAAM;MACf,CAAC,MAAM;QACL,OAAO,GAAG;MACZ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACER,OAAA;IAAKU,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBX,OAAA;MAAIU,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCf,OAAA;MAAIU,SAAS,EAAC,SAAS;MAAAC,QAAA,EACpBN,qBAAqB,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,MAAM,EAAEQ,KAAK,kBACzChB,OAAA;QAAgBU,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAC/BH;MAAM,GADAQ,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACE,EAAA,GAvBWhB,eAAe;AAyB5B,eAAeA,eAAe;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}